{"version":3,"sources":["App.js","useOutsideClickHandler.js","index.js"],"names":["cache","opened","imgQueue","createImageDiv","outer","document","createElement","style","display","container","addEventListener","position","width","height","top","left","zIndex","flexDirection","append","innerHTML","catUrl","Math","random","loadQueue","length","push","setTimeout","getImageDiv","columnIndex","rowIndex","key","pop","body","Cell","handler","ref","useState","getOpened","open","setOpen","modalRef","useRef","current","useEffect","handleClickOutside","event","contains","target","removeEventListener","fontWeight","opacity","undefined","padding","borderRadius","border","color","cursor","onClick","setOpened","colCount","rowCount","App","init","setInit","gridRef","scrollToItem","className","columnCount","columnWidth","direction","rowHeight","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9e471029.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { FixedSizeGrid as Grid } from \"react-window\";\nimport useOutsideClickHandler from \"./useOutsideClickHandler\";\n\nimport \"./styles.css\";\n\nconst catUrl = \"https://api.thecatapi.com/api/images/get?format=src\";\n\nconst poke = async () => {\n  return fetch(\"https://api.thecatapi.com/api/images/get?format=src\", {\n    mode: \"no-cors\"\n  });\n};\n\nconst cache = {};\nconst opened = {};\nconst imgQueue = [];\n\nconst setOpened = (columnIndex, rowIndex) => {\n  const key = columnIndex + \"-\" + rowIndex;\n  opened[key] = true;\n};\n\nconst getOpened = (columnIndex, rowIndex) => {\n  const key = columnIndex + \"-\" + rowIndex;\n  return opened[key] || false;\n};\n\nconst createImageDiv = () => {\n  const outer = document.createElement(\"div\");\n  outer.style.display = \"none\";\n\n  const container = document.createElement(\"div\");\n  container.addEventListener(\"click\", () => {\n    outer.style.display = \"none\";\n  });\n\n  container.style.position = \"fixed\";\n  container.style.width = \"100%\";\n  container.style.height = \"100%\";\n  container.style.top = 0;\n  container.style.left = 0;\n  container.style.zIndex = 100;\n  container.style.display = \"flex\";\n  container.style.flexDirection = \"column\";\n  outer.append(container);\n\n  container.innerHTML = `<div style=\"flex-grow: 1\"></div>\n    <div style=\"display: flex; flex-grow: 0; flex-direction: row\">\n\n      <div style=\"flex-grow: 1\"></div>\n      <div style=\"flex-grow: 0; overflow-y: scroll; max-height: 100vh;\">\n        <div style=\"margin: 1em; \">\n        <img src=\"${\n          catUrl + \"&c=\" + Math.random()\n        }\" style=\"max-width: 100%; max-height: 100%; min-width: 200px; min-height: 200px; background-color: rgba(255,255,255,0.4);\">\n        </div>\n      </div>\n      <div style=\"flex-grow: 1\"></div>\n\n    </div>\n  <div style=\"flex-grow: 1\"></div>`;\n\n  return outer;\n};\n\nconst loadQueue = () => {\n  while (imgQueue.length < 7) {\n    imgQueue.push(createImageDiv());\n  }\n};\n\n// Load initial\nsetTimeout(loadQueue);\n\nconst getQueuedImgDiv = () => {\n  setTimeout(loadQueue);\n  if (imgQueue.length > 0) {\n    return imgQueue.pop();\n  } else {\n    return createImageDiv();\n  }\n};\n\nconst getImageDiv = (columnIndex, rowIndex) => {\n  const key = columnIndex + \"-\" + rowIndex;\n\n  if (cache[key]) {\n    return cache[key];\n  }\n\n  const outer = getQueuedImgDiv();\n  document.body.append(outer);\n\n  cache[key] = outer;\n  return cache[key];\n};\n\nconst Cell = ({ columnIndex, rowIndex, style }) => {\n  const [open, setOpen] = useState(getOpened(columnIndex, rowIndex));\n  const modalRef = useRef();\n\n  const handleClose = () => {\n    if (modalRef.current) {\n      modalRef.current.style.display = \"none\";\n    }\n  };\n\n  const handleOpen = () => {\n    if (!modalRef.current) {\n      modalRef.current = getImageDiv(columnIndex, rowIndex);\n    }\n\n    modalRef.current.style.display = \"block\";\n    setOpen(true);\n    setOpened(columnIndex, rowIndex);\n  };\n\n  useOutsideClickHandler(() => handleClose(), modalRef);\n\n  return (\n    <div style={style}>\n      <button\n        style={{\n          fontWeight: \"bold\",\n          opacity: open ? \"0.3\" : undefined,\n          padding: \"0.8rem 1.2rem\",\n          borderRadius: \"0.5rem\",\n          border: \"2px solid lightgray\",\n          color: \"black\",\n          cursor: \"pointer\"\n        }}\n        onClick={handleOpen}\n      >\n        Kitten, Please\n      </button>\n    </div>\n  );\n};\n\nconst colCount = 100000;\nconst rowCount = 200000;\n\nexport default function App() {\n  const [init, setInit] = useState(true);\n  const gridRef = useRef();\n\n  useEffect(() => {\n    if (!init) return;\n    setTimeout(() => {\n      setInit(false);\n      gridRef.current.scrollToItem({\n        columnIndex: colCount / 2,\n        rowIndex: rowCount / 2\n      });\n    });\n  });\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        width: \"100%\",\n        height: \"100%\"\n      }}\n    >\n      <Grid\n        style={{\n          width: \"100%\",\n          height: \"100%\"\n        }}\n        ref={gridRef}\n        columnCount={colCount}\n        columnWidth={150}\n        direction=\"ltr\"\n        height={2000}\n        rowCount={rowCount}\n        rowHeight={70}\n        width={2000}\n      >\n        {Cell}\n      </Grid>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\n\nexport default function useOutsideClickHandler(handler, ref) {\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        handler();\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    document.addEventListener(\"touchdown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n      document.removeEventListener(\"touchdown\", handleClickOutside);\n    };\n  }, [ref, handler]);\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}